pipeline {
 agent any
 
 tools{
 jdk 'jdk17'
 maven 'maven3'
 }
 environment {
 SCANNER_HOME=tool 'sonar-scanner'
 }
 
 stages {
 stage('Git Checkout') {
 steps {
 git changelog: false, poll: false, url: 'https://github.com/shubnimkar/CI_CD_Devsecops.git'
 }
 }
 
 stage("Sonarqube Analysis "){
 steps{
 withSonarQubeEnv('sonar') {
 sh ''' $SCANNER_HOME/bin/sonar-scanner \
 -Dsonar.projectName='testing' \
 -Dsonar.projectKey=testing \
 -Dsonar.analysis.report.format=json'''
 
 }
 }
 }
stage('SonarQube Report Export') {
 steps {
 script {
 // Authentication credentials
 def sonarUsername = 'admin'
 def sonarPassword = 'leo'
 def sonarServer = 'http://172.28.164.35:9000'
 // Fetch SonarQube report data
 def sonarReportData = sh (
 script: "curl -s -u ${sonarUsername}:${sonarPassword} ${sonarServer}/api/issues/search?componentKeys=Petclinic",
 returnStdout: true
 ).trim()
 // Save report data to a file
 writeFile file: 'sonarqube-report.json', text: sonarReportData
 }
 }
 }
 
 }
 post {
 success {
 // Archive the SonarQube report
 archiveArtifacts artifacts: 'sonarqube-report.json', allowEmptyArchive: true
 }
 }
 
